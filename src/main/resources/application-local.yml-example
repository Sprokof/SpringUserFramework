debug: 'true' # Enable or disable debug mode
logging:
  level:
    com:
      digitalsanctuary: DEBUG # Set logging level for digitalsanctuary package
    org:
      springframework:
        web:
          nodeValue: DEBUG # Set logging level for web nodeValue
          filter:
            CommonsRequestLoggingFilter: DEBUG # Set logging level for CommonsRequestLoggingFilter
        security: DEBUG # Set logging level for security

spring:
  mail: # Mail configuration
    username: AAAAAAAAA
    password: BBBBBBBBBBB
  security:
    oauth2:
      enabled: true
      client:
        registration:
          google:
            client-id: 45XXXXXXXXX.apps.googleusercontent.com
            client-secret: GOXXXXXXXXXXXXXXX
            authorization-grant-type: authorization_code
            redirect-uri: 'https://yourtestdomain.ngrok.io/login/oauth2/code/{registrationId}'
            scope:
              - email
              - profile # Request profile scope for OAuth2
            client-name: Google # Name of the OAuth2 client
          facebook:
            client-id: 3333333333333333 # Facebook client ID for OAuth2
            client-secret: 555555555555555GGGGGGGGG # Facebook client secret for OAuth2
            authorization-grant-type: authorization_code # Authorization grant type for OAuth2
            redirect-uri: 'https://yourtestdomain.ngrok.io/login/oauth2/code/{registrationId}' # Redirect URI for OAuth2
            scope:
              - email # Request email scope for OAuth2
              - public_profile # Request public_profile scope for OAuth2
            client-name: Facebook # Name of the OAuth2 client
        #   apple:
        #     client-id: com.YYYYYYYYYY # Apple client ID for OAuth2
        #     client-secret: XXXXXX # Apple client secret for OAuth2
        #     authorization-grant-type: authorization_code # Authorization grant type for OAuth2
        #     redirect-uri: 'https://yourtestdomain.ngrok.io/login/oauth2/code/{registrationId}' # Redirect URI for OAuth2
  mail:
    username: AAAAAAAAA # Mail server username
    password: BBBBBBBBBBB # Mail server password
  security:
    oauth2:
      enabled: true # Enable or disable OAuth2
      client:
        registration:
          google:
            client-id: 45XXXXXXXXX.apps.googleusercontent.com # Google client ID for OAuth2
            client-secret: GOXXXXXXXXXXXXXXX # Google client secret for OAuth2
            authorization-grant-type: authorization_code # Authorization grant type for OAuth2
            redirect-uri: 'https://yourtestdomain.ngrok.io/login/oauth2/code/{registrationId}' # Redirect URI for OAuth2
            scope:
              - email # Request email scope for OAuth2
              - profile # Request profile scope for OAuth2
        #       - email
        #       - name
        #     client-name: Apple
  web:
    resources:
      static-locations: file:src/main/resources/static/, classpath:/static/ # Static locations for web resources
      cache:
        period: 0 # Cache period for web resources

server:
  servlet:
    session:
      cookie:
        secure: 'false' # Enable or disable secure cookie

user:
  audit:
    flushOnWrite: 'true' # Enable or disable flush on write for user audit
  registration: # User registration configuration
        #   apple:
        #     authorization-uri: https://appleid.apple.com/auth/authorize?response_mode=form_post # Authorization URI for OAuth2
        #     token-uri: https://appleid.apple.com/auth/token # Token URI for OAuth2
        #     jwk-set-uri: https://appleid.apple.com/auth/keys # JWK Set URI for OAuth2
        #     user-name-attribute: sub # User name attribute for OAuth2
  thymeleaf:
    cache: 'false' # Enable or disable Thymeleaf cache
    prefix: file:src/main/resources/templates/ # Prefix for Thymeleaf templates
  devtools: # Devtools configuration
        #     jwk-set-uri: https://appleid.apple.com/auth/keys
        #     user-name-attribute: sub
  thymeleaf:
    cache: 'false'
    prefix: file:src/main/resources/templates/
  devtools:
    restart:
      enabled: 'true' # Enable or disable devtools restart
      poll-interval: '2s' # Poll interval for devtools restart
      quiet-period: '1s' # Quiet period for devtools restart

      additional-paths:
      - src/main/java/ # Additional paths for devtools restart

    livereload:
      enabled: 'true' # Enable or disable livereload
      https: 'true' # Enable or disable HTTPS for livereload

  mvc:
    log-request-details: 'true' # Enable or disable request details logging
  web: # Web configuration
    resources:
      static-locations: file:src/main/resources/static/, classpath:/static/
      cache:
        period: 0

server:
  servlet:
    session:
      cookie:
        secure: 'false'

user:
  audit:
    flushOnWrite: 'true'
  registration:
    sendVerificationEmail: false # Enable or disable sending verification email
    googleEnabled: true # Enable or disable Google registration
    facebookEnabled: true # Enable or disable Facebook registration
  security:
    # unprotectedURIs: /,/index.html,/favicon.ico,/css/*,/js/*,/img/*,/user/registration,/user/resendRegistrationToken,/user/resetPassword,/user/registrationConfirm,/user/changePassword,/user/savePassword # Unprotected URIs for security
  mail:
    fromAddress: you@test.com # From address for mail

management:
  newrelic:
    metrics:
      export:
        account-id: ACCTID # Account ID for New Relic metrics export
        api-key: KEYYYYY # API key for New Relic metrics export

